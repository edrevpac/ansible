---

- hosts: all

  become: true

  tasks:

  - name: install JDK
    apt:
      update_cache: yes
      name: default-jdk-headless
      state: present

  - name: set JAVA_HOME environment variables
    lineinfile:
      path: ~/.profile
      line: 'JAVA_HOME=/usr/lib/jvm/default-java'
      insertbefore: BOF
    become_user: vagrant

  - name: set JRE_HOME environment variables
    lineinfile:
      path: ~/.profile
      line: 'JRE_HOME=/usr/lib/jvm/default-java/jre'
      insertbefore: BOF
    become_user: vagrant

  - name: install apt-transport-https to handle https requests
    apt:
      name: apt-transport-https
      state: present

  - name: install git
    apt: 
      update_cache: yes
      name: git
      state: latest

  - name: import jenkins key
    apt_key: 
      url: https://pkg.jenkins.io/debian/jenkins.io.key
      state: present

  - name: add repo
    apt_repository:
      repo: deb https://pkg.jenkins.io/debian binary/
      state: present

  - name: install jenkins
    apt:
      update_cache: yes
      name: jenkins
      state: present

  - name: create jenkins user
    user:
      name: jenkins
      home: /var/lib/jenkins


  - name: give the new user authority
    file:
      path: /var/lib/jenkins
      owner: jenkins
      group: jenkins
      mode: 0755


  - name: set user password
    shell: (echo 123 ; sleep 1; echo 123) | passwd jenkins

  - name: set environment variables
    lineinfile:
      path: ~/.profile
      line: 'JENKINS_HOME=/var/lib/jenkins'
      insertbefore: BOF
    become_user: vagrant

  - name: skip jenkins initial setup
    lineinfile:
      path: /etc/default/jenkins
      line: 'JAVA_ARGS="-Djenkins.install.runSetupWizard=false"'
      insertbefore: BOF

  - name: enable service to run on boot
    service:
      name: jenkins
      enabled: yes
      state: restarted

#  - name: allow traffic to port 8080 so that jenkins web-interface is accessible
#    shell: firewall-cmd --zone=public --permanent --add-port=8080/tcp
#           firewall-cmd --reload
#    ignore_errors: yes

#  - name: Restart server
#    shell: sleep 2 && /sbin/shutdown -r now "GOING DOWN!!!"

#  - name: waiting 30 secs for server to come back
#    local_action: wait_for host={{ ansible_default_ipv4.address }} port=22 state=started delay=30 timeout=60
#    become: false